{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/duoyu.jpg","path":"img/duoyu.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/error-page.png","path":"img/error-page.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/youmi.png","path":"img/youmi.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"d126bdd302d69d6f5aa02dbbc2b4e02ffcdfcb88","modified":1736317099850},{"_id":"source/_posts/howToCreateHexoAtGithubPages.md","hash":"a5363b8f9e16a5193240cbafa1137a7af105d9ae","modified":1736328561500},{"_id":"source/friends/index.md","hash":"dd4ac444053cd64992f0e4ed17f46ca79fe71803","modified":1736330386033},{"_id":"source/tags/index.md","hash":"d3811f1a8b148b31ba4a4000e605f9e8ef0d3774","modified":1736330379977},{"_id":"source/categories/index.md","hash":"8a22ec2f40402f6dfd0400c09425e1b24e34b249","modified":1736330392527},{"_id":"source/about/index.md","hash":"8543342f3344fe340879cbe3835f9beb1ced0582","modified":1736330374187},{"_id":"themes/butterfly/README.md","hash":"14986f184ddbd5094bcc6cdd97597ac5e6f45283","modified":1736335016362},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1736335016361},{"_id":"themes/butterfly/_config.yml","hash":"ac4f3ff25d168ceed7a6b3359f86079225b2c841","modified":1736337665287},{"_id":"themes/butterfly/README_CN.md","hash":"1c711ba472f83b539434d37e6cd34168b96c6072","modified":1736335016362},{"_id":"themes/butterfly/package.json","hash":"0bf01e3f1834f98589beda5549358d8f435dd025","modified":1736335016394},{"_id":"themes/butterfly/plugins.yml","hash":"a7b44cb06544045750d4214ced2f53ee6cf1faa3","modified":1736335016394},{"_id":"themes/butterfly/.github/FUNDING.yml","hash":"3b572099a992e30267f5fe4cd3c582ff7ac9f083","modified":1736335016359},{"_id":"themes/butterfly/languages/default.yml","hash":"a2c938b1ef69195aec10c90dc7d1871953548e01","modified":1736335016363},{"_id":"themes/butterfly/languages/en.yml","hash":"a2c938b1ef69195aec10c90dc7d1871953548e01","modified":1736335016363},{"_id":"themes/butterfly/languages/ja.yml","hash":"a281d3cc3e117e90597b783dc5569dba3976d2eb","modified":1736335016363},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"e0bf36edf18cf3380b900be7528b536252990c26","modified":1736335016364},{"_id":"themes/butterfly/languages/zh-HK.yml","hash":"bac3063ad2892be232f7d91361c28585a3cc7eb5","modified":1736335016364},{"_id":"themes/butterfly/languages/ko.yml","hash":"c7d861c58f204f47a5b4d6e118e1f1e8fb8a852f","modified":1736335016364},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"bd7ee35aa30964493d2729ef105bb86331b096c3","modified":1736335016364},{"_id":"themes/butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1736335016364},{"_id":"themes/butterfly/layout/category.pug","hash":"a7e9805a781e34e38d27462e6ce2a5821c34bb9f","modified":1736335016364},{"_id":"themes/butterfly/layout/index.pug","hash":"a93004cc8ec8050df603d32a6e6e02cd96fd9875","modified":1736335016392},{"_id":"themes/butterfly/layout/page.pug","hash":"c839d8ae0d801ff21425fc6358d83e7995c0b221","modified":1736335016392},{"_id":"themes/butterfly/layout/post.pug","hash":"747dd6bda1b33268017e81beea9ed0035d5e628b","modified":1736335016393},{"_id":"themes/butterfly/layout/tag.pug","hash":"ca5333bd262cb58c195c844b593a0eed0c721766","modified":1736335016394},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"10ce05c8dbde09f53bdabe40b5388de9ccc71a31","modified":1736335016360},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1736335016360},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1736335016360},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1736335016361},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1736335016361},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"875f6710d2b286461d13df349fff82c9f8ee501e","modified":1736335016365},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"47b117c1fb42ba6ca022655969f8d846609fc511","modified":1736335016365},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"0b4cfca89a743530b17a1e0a0f562790d842f882","modified":1736335016365},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"10d834891758e25becb005fd69ef2bb602c6ea79","modified":1736335016372},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"f05e0f3bdfd34e41c1e5615672cf54864fd9c9e5","modified":1736335016369},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"f5c8057a63c78a176ea88131e9ea6de73ea72484","modified":1736335016373},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"f28e1f91551a855c1f0deadf9d9293c46731f8ea","modified":1736335016374},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1736335016416},{"_id":"themes/butterfly/source/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1736335016420},{"_id":"themes/butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1736335016419},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1736335016420},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1736335016416},{"_id":"themes/butterfly/source/css/var.styl","hash":"a5b7497ca871742070cf16b09706c9e9cf27ec2d","modified":1736335016416},{"_id":"themes/butterfly/source/js/main.js","hash":"110f2787fa3906aff505a88efd38a5e85f7a9e34","modified":1736335016421},{"_id":"themes/butterfly/scripts/common/postDesc.js","hash":"272613a71d16f0de6dac883be4839259f774be76","modified":1736335016395},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"fdb5482d04a75bd79946ad1ed291d281d0e9362d","modified":1736335016422},{"_id":"themes/butterfly/source/js/utils.js","hash":"48637ad8e405306772b93837f33400bde1055819","modified":1736335016423},{"_id":"themes/butterfly/scripts/events/404.js","hash":"039fc75f363d79669b0b2177d929cdff6f2ef7a4","modified":1736335016395},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"7864ba45716c51aef8d8b04fd4bc212e0008ce3b","modified":1736335016395},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"7b1b16e1e8e08245a345764616956be50487eb53","modified":1736335016396},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1736335016396},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1736335016396},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"c01ebae2480196857462df99caac4481f211048d","modified":1736335016396},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"bac639c404588ea62e601ef0bcd368c3bd0119af","modified":1736335016396},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5ed2d7ef240c927fe1b7a7fb5bf9e55e2bfd55a5","modified":1736335016396},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"0df22d7dbfa766a65cb6032a1f003348f4307cfe","modified":1736335016396},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"7a293094ced8b8b73611929962d8974367a6d2d9","modified":1736335016397},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"0cdf781a8c14d7b50d309e69f282ec7b178804bb","modified":1736335016397},{"_id":"themes/butterfly/scripts/helpers/getArchiveLength.js","hash":"bf77635e920eaf52bceebc95f87c7c87a7ca8038","modified":1736335016397},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"088493dca2a157b49d232db482ef916207240b46","modified":1736335016398},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"1c0ff289b44e7a65848c6f28b89bf020186eee11","modified":1736335016398},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"950b7d0966429bf0f9e6c5e1161e50e545e320b4","modified":1736335016398},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"45367c4ce827329867dbcc750ec125da9ccb2cfd","modified":1736335016398},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"2f44e1b3ccd170b256eae178299d6fa933a8d490","modified":1736335016399},{"_id":"themes/butterfly/scripts/tag/chartjs.js","hash":"195ba802d7e8406c155124a9c939a2318f82938b","modified":1736335016399},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"25eefe10189caf3910a0e5d5b2f2043ae9255531","modified":1736335016399},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"3aeda1e8ce2e2e29ab106b4d5140a07026a7411a","modified":1736335016399},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"c863d2732ce4bdc084f2d0db92f50f80328c1007","modified":1736335016400},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"cf0bc17d0180231167cc6aa8a00fc64f198cb9f9","modified":1736335016400},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"289f85847c58f0b2b7d98a68e370a2896edb8949","modified":1736335016400},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"5d08c3552f7d3c80a724ca628bff66321abe2e5a","modified":1736335016399},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1736335016400},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"40bc9a065e3a1423e0e66f4911e00713ca9f5e9e","modified":1736335016401},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"35d54adc92e717cc32e13515122b025fd1a98ea2","modified":1736335016401},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"3c486b149e28edd1a06843f05a5c355000991b82","modified":1736335016401},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"514b7df58d1197a9224dc8981cbb9a4a9a6429b5","modified":1736335016401},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"f17ab71e9333d05806d07029453a5b03d0a3e0cc","modified":1736335016368},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"733184f88e3a586a5fcc9d193ad500556b6c8eed","modified":1736335016368},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"7d799c4694adb6e265e3f4b975d7f7f6a7021a17","modified":1736335016368},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"e2d31e0f450ad42c47f7ee96375799342bf2f19b","modified":1736335016369},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"940a4c2472924237055a34a51606c8b49cd51a21","modified":1736335016365},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"79f1556b29f902891cb6d5548a9d9211565a78d8","modified":1736335016368},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"1d586ac035ca9497ed12c2cfa47e977678378d08","modified":1736335016367},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"f3e0cf1e7f889f622338870b24b790e55de8d44e","modified":1736335016366},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"9b8a1d2715a0eee3c907212792155ad5946ccf12","modified":1736335016366},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1736335016367},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"a7c929b90ae52b78b39b1728e3ab0e3db1cb7b9a","modified":1736335016367},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"83ed05ef1e39f2ee70c3fba2cf96e488d8ffec66","modified":1736335016367},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1736335016367},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"d76ce71ba106e350670c021a3dcae57547d01830","modified":1736335016370},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"9d2d539555bab495959b9df734ed5c43a9f9e5a9","modified":1736335016370},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"a2f7d69ca7ec58f24fe7d4e04ae21d5b62b01567","modified":1736335016369},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"ef7afe0df7a3746744ac8185da7163b7406120ca","modified":1736335016370},{"_id":"themes/butterfly/layout/includes/mixins/indexPostUI.pug","hash":"7c3b5bb3a731f075667430e97bb51d8822105488","modified":1736335016370},{"_id":"themes/butterfly/layout/includes/page/404.pug","hash":"15d32c511e4875066fcbe9cb84c3ada07b5a7c41","modified":1736335016371},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1736335016371},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"efb40388e37cca0b5e7c3c66e811a42f8d32c910","modified":1736335016371},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"848efa49cf25c37afcd6233d0021281cd06c0f40","modified":1736335016372},{"_id":"themes/butterfly/layout/includes/page/shuoshuo.pug","hash":"b2423cfc57a5e3a0e1112ff7c18d5c5c720d89d5","modified":1736335016372},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"79ad31eb72a9e14007770b18a426406a25315b38","modified":1736335016372},{"_id":"themes/butterfly/layout/includes/post/outdate-notice.pug","hash":"b7ce9484bc5c97ea6154f0b78fb9b8951fafedbd","modified":1736335016373},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"db92f25ff3fd061882f81bf74ca560ff66983a0c","modified":1736335016373},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"b96c232e5178d927987791d9ae386dd83679535a","modified":1736335016373},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"ed79fef5b5025415ea12eaed970f3fe7f6ef9596","modified":1736335016375},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1736335016382},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"e5b5eb5833d5c324c3d29164235313800d5dedba","modified":1736335016385},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"01ef6240a136c0df4478fabd3844b21cda970d16","modified":1736335016385},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"88f979a0b1a19eeb0db229247833bf9c6865c3b9","modified":1736335016385},{"_id":"themes/butterfly/layout/includes/third-party/umami_analytics.pug","hash":"4a309a47274c218d65f3a1f6462a21bd6c2f839d","modified":1736335016388},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"a11455e294d32d2795eb1ee9d54a2906f064a1cb","modified":1736335016387},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1736335016388},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1736335016388},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1736335016388},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"a22caf6c81bab67780182ccba982ebd7ab1a8a5a","modified":1736335016389},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1736335016389},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1736335016389},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"d8753772889b5d0f4d15639ed6af5e91e53b1d03","modified":1736335016389},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"e0bb72fa0ce15964b11b8fe421cae3432394e35f","modified":1736335016390},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"d48d77af1670bd568d784794408bf524a448bfcc","modified":1736335016390},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1736335016390},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1736335016391},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1736335016391},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"0144919df09c62c9c8526d985c7465eb92ad6f5c","modified":1736335016391},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"8df529f71e25f1c0a00e533de7944ed3d1ba7bd8","modified":1736335016392},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"d12340a7df4601b9a23f070e16645861aeb3bb0a","modified":1736335016402},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"814053dd7499284a5c185382eb43c8f8db25baf2","modified":1736335016402},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"67062d597408068e4a59e95851e98fed34b745da","modified":1736335016403},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"a51edfd3e499e7d38c32241c40e8e4d371efca73","modified":1736335016404},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"ba174889e770ae9f6683379b9eae9d8c94253080","modified":1736335016405},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"4cc02bcbaa4a1933a82a9ea57a603fe2d059fc77","modified":1736335016406},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1736335016406},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"d7b988d8588207086670f39aa49fce442c429f7a","modified":1736335016406},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"094108f2a4e351a2fa496d6bd3e2388151416b3f","modified":1736335016407},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1736335016407},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"4c64cd9225437cbb83f411dc7531527b33730923","modified":1736335016407},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"543eaf9c7df7e0db841e5946ee5f9082c3c46290","modified":1736335016407},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"ef8e8549fe7ad4b99793844a93b4a89f77f417d5","modified":1736335016408},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d9cdf564a822a585e67fd5bac8573ba87eeb3743","modified":1736335016408},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"a0f5835f04358122e8b1d38dd3e8da09a1b5b431","modified":1736335016408},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"084dc4dfb41f55e237a9d6cf8c2f5dba729b83be","modified":1736335016408},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"0af7c8754f04bdd9a02a14d880774753bd2e35ee","modified":1736335016408},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"93fe5a7ed83ceb11b888f946be94cf1ee7648f8c","modified":1736335016409},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"205ccc7d0ec6ce1193b46bc0c9ce0385594581fb","modified":1736335016409},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"ad66212554468b7067590308ed4cf40524fea662","modified":1736335016409},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5abe5480d83ff8b452a780a484d50a44091475bf","modified":1736335016410},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"c4cda7b0c99015df29ce00fdfddd2f7679653754","modified":1736335016410},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"dcff804c4c237e1e908481b44c1ac4e39ac0da34","modified":1736335016410},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"1f8d715faf3b91b53426e38195c0920afb3bfa1c","modified":1736335016410},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"992d192db7d1c96e995b85ed11c20c571d33fbad","modified":1736335016411},{"_id":"themes/butterfly/source/css/_page/shuoshuo.styl","hash":"79bb1d9a27822ed5675d1e52f5dbd0e2f5d5010a","modified":1736335016411},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"7543bb688876a946538d66b991c71b94b5216277","modified":1736335016411},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d8a8275a68a1421c4c09b604cf78bea16c1d0463","modified":1736335016411},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"6c4cbdadd9a49029fe0c59e29808d873e5b6b6ee","modified":1736335016412},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"1f2b86df86df81c3a59377b29102314ffc73dfa6","modified":1736335016412},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"de8437a058a315d14d7e7034066f095b7b3ed4b4","modified":1736335016412},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"30d1f809efd252ed0233d96d4374efd2b01d2292","modified":1736335016413},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"d27dbccaf3de1c9158d19e4fd49a25953cb5778d","modified":1736335016414},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"3be8d0a75e7cc96548667cae0cb6a474279bd0b5","modified":1736335016414},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"216f52fefc2274b542b549d8470503e6f1a308fb","modified":1736335016414},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1736335016415},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1736335016413},{"_id":"themes/butterfly/source/css/_tags/series.styl","hash":"0657169849bc4bf4d93b5492ade040c8f58c1901","modified":1736335016415},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"dfbce718d528dd241664ff8fd28b37da92c29cef","modified":1736335016415},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"e846ddaef494d46cdfa2379deacfe74fa1cc5264","modified":1736335016415},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1736335016416},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"7119f2f2943de71999d3dd6ba5c60cde846f114b","modified":1736335016421},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"00b4073dbe0687a80e6d58c104c6f59ec01a84fd","modified":1736335016374},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"a2b783230a9143de69004cfc914d9f55e6fc1660","modified":1736335016422},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"d59d43a8caad801222608a341f6845c6f8d1b265","modified":1736335016374},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"b03ee8625149191f9d5d057bbc9824b68d8dd0c4","modified":1736335016375},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1736335016375},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"cbfbcf34a24d21ba2b21cf9eedb76f4c3c563c5a","modified":1736335016375},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1736335016376},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1736335016376},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"7884883ec15792f7e54daacb3c62b851dde2b66a","modified":1736335016376},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1736335016377},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"23d97d4334d741daa76886776f6b33016efc0d6e","modified":1736335016377},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"8d7f62dd8d057046bb55b411c16022802e69429c","modified":1736335016377},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"6d41b60f48f94516e17c5fc20dc027db3213a089","modified":1736335016378},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"e8438941085def0591a72fc9b0d705dbf107f54f","modified":1736335016377},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"b5db4203a1392385838c73549ddeae0a4be67eba","modified":1736335016376},{"_id":"themes/butterfly/layout/includes/third-party/math/chartjs.pug","hash":"7650f6584fde8f7f9d1ba7057dc2e6befc1cd9a8","modified":1736335016382},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"1a9e0239add2759b78511ea51b7a6630b2f75095","modified":1736335016382},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"b83db9fa64d42a0bfd97efb660e09be3f166a144","modified":1736335016382},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"451391d5367cae3f89efce2c37d431c5434b127a","modified":1736335016383},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"ca2fc5928ca292f29fd8333c73733344994096fb","modified":1736335016383},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"3dea5867237c10a1ea2c0d31f41461f266fc6db8","modified":1736335016378},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"1514dd857900160dc20ee7c440e332bc0192a67d","modified":1736335016378},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"93568e60016a26c3d33701d0cbaa1dcff8b317db","modified":1736335016379},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"dabf6a1784c18b870174ad2bb741877d0bef49ff","modified":1736335016379},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"82ff21ff50a268c77dd4a13a37dca7b99f817e52","modified":1736335016379},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"09c304041972a5a5a4697e0694bee2ac3d20e399","modified":1736335016379},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1736335016380},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"db6713d2b90eb8183f86ac92c26761a8501c0ddb","modified":1736335016380},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"6ce7e93223ba7f619c0314bf7dee6fb14065f28c","modified":1736335016380},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"082515896cbbec4757d3dcfdc6370d097d9ea8cb","modified":1736335016380},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"996cf219264451baeb1ecd48c5b585cfc1724af6","modified":1736335016381},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"f1ef673275dfab087fd465c5a5d89d1e3ea47024","modified":1736335016381},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"fb39a928512f13fa8bf376e8c10f37699a571bfe","modified":1736335016381},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"f934f434c41d5ec6304e1812eeeb5555ee7b3c0f","modified":1736335016381},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"b6f7ddce953770660370dc147828151a63d208de","modified":1736335016383},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/common.pug","hash":"fc6e154482978c709c613e6ba1c68249db050193","modified":1736335016383},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"dd7aef682b3164d45aa5bb56c646e549a903537a","modified":1736335016384},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"adde60871bb8cf1a307ba822e8f602884a4e5f31","modified":1736335016384},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1736335016384},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"20063e72c61a512ff0beab6a8b308fba42258532","modified":1736335016384},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"81a7cfd0485bb77a6ea857208377c998cd1eceec","modified":1736335016384},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ba16e30bd223f7312e6a01415665f27f9c98c26d","modified":1736335016384},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"f93269eed585ebe6328265d2dd6b171cefba08cf","modified":1736335016385},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1736335016386},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"013756ff3363344987cc00fc9bd833baf193c341","modified":1736335016386},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"f8557548d2ad8dd149c562193991c6c6cda02415","modified":1736335016386},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"2622b4cf9189fa23e4a422aaf9ef272e4f2c6137","modified":1736335016386},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1736335016387},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"e51e896ccb13900de38dc81cf44dc789e2418a12","modified":1736335016387},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"efef352c1d122409575386bf3894dce8e87032e2","modified":1736335016387},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"9f02598b5e4296aec6470639d4bac4c9ac46392e","modified":1736335016403},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"077ec530831be1d80e93da380406b9f5abd0918a","modified":1736335016404},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"1883c91d43bff10aae55122a21e0b064b6f5c9dd","modified":1736335016404},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"ef52ebf1e8e751a412f9456fdaeee7d88afd9a72","modified":1736335016403},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"de4bb5fc2dfca368b35e4c1109c92f7abc9e2245","modified":1736335016404},{"_id":"themes/butterfly/source/img/duoyu.jpg","hash":"66d7c63c437aaefa1b9720a17a1d604ca8e2956c","modified":1736335647625},{"_id":"themes/butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1736335016419},{"_id":"themes/butterfly/source/img/youmi.png","hash":"fad6b345b1948d877d7cf3e8e956a2c2f1b55602","modified":1736335639974},{"_id":"public/content.json","hash":"58808996c595bf6ae30c95eea961636bd75a8604","modified":1736337768732},{"_id":"public/friends/index.html","hash":"c4ff520e60cb2ad9f900aa1b2de4d4dfbd734dfd","modified":1736337768732},{"_id":"public/categories/index.html","hash":"107d714fd6da824f72a81284e990cc0c43d5f881","modified":1736337768732},{"_id":"public/about/index.html","hash":"734a36cafb602a94528e5f17522616603b8f60a9","modified":1736337768732},{"_id":"public/tags/index.html","hash":"d41bad799cb66bc2f51422dc554ea817a56929f4","modified":1736337768732},{"_id":"public/archives/index.html","hash":"08f5ab9320dd99b8c035b08e4da55457947eb185","modified":1736337768732},{"_id":"public/archives/2025/index.html","hash":"678a7b8d257c56d567f9dad1993fb90d2ce278c8","modified":1736337768732},{"_id":"public/archives/2025/01/index.html","hash":"a9425b16ce8c11b5ce61e0a8a07e30d5fc82d446","modified":1736337768732},{"_id":"public/categories/技术/index.html","hash":"e0846bdb74a94a31b54280ce085207a7fe60636c","modified":1736337768732},{"_id":"public/index.html","hash":"e2361b5401865a2d8614642384fc09cb75683f1a","modified":1736337768732},{"_id":"public/tags/deepseek/index.html","hash":"cbc174e8303b4585eb720f68d4844a53e25f6fbf","modified":1736337768732},{"_id":"public/tags/教程/index.html","hash":"aaf08dd07123b71141a661e5a6357dc4301a6767","modified":1736337768732},{"_id":"public/2025/01/08/howToCreateHexoAtGithubPages/index.html","hash":"70729fc9b68fb40ee0d14e65d59f47872219cbd5","modified":1736337768732},{"_id":"public/2025/01/08/hello-world/index.html","hash":"2adb7f7bfe38533ce501a2fd71341e2bb0393e30","modified":1736337768732},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1736337768732},{"_id":"public/img/favicon.ico","hash":"455ac256580bf31a45813dbbdb87219bfc8bfb04","modified":1736337768732},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1736337768732},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1736337768732},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1736337768732},{"_id":"public/js/search/algolia.js","hash":"e5821f78381af9f0f646952a7dd118daab2a79a6","modified":1736337768732},{"_id":"public/js/utils.js","hash":"fd3c26366c78dd82bc87d4ddebe76c582122e1b7","modified":1736337768732},{"_id":"public/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1736337768732},{"_id":"public/css/index.css","hash":"682b8024d3e852b2515fb9fe70d15732c2f2e960","modified":1736337768732},{"_id":"public/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1736337768732},{"_id":"public/js/main.js","hash":"9fb88eb196f9368768aaa554c679129e4969f069","modified":1736337768732},{"_id":"public/img/duoyu.jpg","hash":"66d7c63c437aaefa1b9720a17a1d604ca8e2956c","modified":1736337768732},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1736337768732},{"_id":"public/img/youmi.png","hash":"fad6b345b1948d877d7cf3e8e956a2c2f1b55602","modified":1736337768732}],"Category":[{"name":"技术","_id":"cm5nuodg80004wknhfr1457o2"}],"Data":[],"Page":[{"title":"friends","date":"2025-01-08T09:59:46.033Z","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2025年1月8日17:59:44\n---\n","updated":"2025-01-08T09:59:46.033Z","path":"friends/index.html","comments":1,"layout":"page","_id":"cm5nuodfz0000wknh5arv3bt0","content":"","cover":false,"excerpt":"","more":""},{"title":"categories","date":"2025-01-08T09:59:52.527Z","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2025年1月8日17:59:50\n---\n","updated":"2025-01-08T09:59:52.527Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cm5nuodg50002wknh63j4h6ro","content":"","cover":false,"excerpt":"","more":""},{"title":"tags","date":"2025-01-08T09:59:39.977Z","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2025年1月8日17:59:37\n---\n","updated":"2025-01-08T09:59:39.977Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cm5nuodga0006wknhdg313s4h","content":"","cover":false,"excerpt":"","more":""},{"title":"about","date":"2025-01-08T09:59:34.187Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2025年1月8日17:59:31\n---\n","updated":"2025-01-08T09:59:34.187Z","path":"about/index.html","comments":1,"layout":"page","_id":"cm5nuodgb0007wknhgpsnfqj2","content":"","cover":false,"excerpt":"","more":""}],"Post":[{"title":"如何在vue+springboot项目中使用https","date":"2025-01-08T05:59:18.647Z","_content":"\n在 Vue + Spring Boot 项目中使用 HTTPS，需要分别在 Vue 前端和 Spring Boot 后端进行配置。以下是具体步骤：\n\n### 1. 生成 SSL 证书\n首先，你需要一个 SSL 证书。可以使用自签名证书进行测试，或从受信任的证书颁发机构（CA）获取正式证书。\n\n#### 自签名证书生成\n使用 OpenSSL 生成自签名证书：\n\n```bash\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n```\n\n这将生成 `key.pem`（私钥）和 `cert.pem`（证书）文件。\n\n### 2. 配置 Spring Boot 使用 HTTPS\n\n#### 将证书放入 Spring Boot 项目\n将生成的 `key.pem` 和 `cert.pem` 文件放入 `src/main/resources` 目录。\n\n#### 修改 `application.properties`\n在 `application.properties` 中添加以下配置：\n\n```properties\nserver.port=8443\nserver.ssl.key-store=classpath:keystore.p12\nserver.ssl.key-store-password=your_password\nserver.ssl.key-password=your_password\n```\n\n将 `key.pem` 和 `cert.pem` 转换为 PKCS12 格式：\n\n```bash\nopenssl pkcs12 -export -in cert.pem -inkey key.pem -out keystore.p12 -name tomcat -CAfile cert.pem -caname root\n```\n\n将生成的 `keystore.p12` 放入 `src/main/resources` 目录。\n\n### 3. 配置 Vue 使用 HTTPS\n\n#### 修改 Vue 开发服务器配置\n在 `vue.config.js` 中配置开发服务器使用 HTTPS：\n\n```javascript\nconst fs = require('fs');\nconst path = require('path');\n\nmodule.exports = {\n  devServer: {\n    port: 8080,\n    https: {\n      key: fs.readFileSync(path.resolve(__dirname, 'key.pem')),\n      cert: fs.readFileSync(path.resolve(__dirname, 'cert.pem')),\n    },\n    proxy: {\n      '/api': {\n        target: 'https://localhost:8443',\n        secure: false,\n        changeOrigin: true,\n      },\n    },\n  },\n};\n```\n\n将 `key.pem` 和 `cert.pem` 放入 Vue 项目根目录。\n\n### 4. 部署配置\n\n#### 前端部署\n将 Vue 项目打包并部署到支持 HTTPS 的服务器（如 Nginx 或 Apache）。\n\n#### 后端部署\n将 Spring Boot 项目打包为 JAR 或 WAR 文件，并部署到支持 HTTPS 的服务器。\n\n### 5. 测试\n启动 Spring Boot 和 Vue 项目，分别通过 `https://localhost:8443` 和 `https://localhost:8080` 访问，确保 HTTPS 正常工作。\n\n### 6. 其他注意事项\n- **证书有效期**：自签名证书仅用于测试，生产环境应使用受信任的 CA 证书。\n- **混合内容**：确保前端资源（如 JS、CSS）通过 HTTPS 加载，避免混合内容问题。\n- **CORS**：如果前后端分离部署，配置正确的 CORS 策略。\n\n通过这些步骤，你的 Vue + Spring Boot 项目将能够使用 HTTPS 进行安全通信。","source":"_posts/hello-world.md","raw":"---\ntitle: 如何在vue+springboot项目中使用https\ndate: 2025年1月8日14:10:11\ntags:\n  - deepseek\n  - 教程\ncategories:\n  - 技术\n---\n\n在 Vue + Spring Boot 项目中使用 HTTPS，需要分别在 Vue 前端和 Spring Boot 后端进行配置。以下是具体步骤：\n\n### 1. 生成 SSL 证书\n首先，你需要一个 SSL 证书。可以使用自签名证书进行测试，或从受信任的证书颁发机构（CA）获取正式证书。\n\n#### 自签名证书生成\n使用 OpenSSL 生成自签名证书：\n\n```bash\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\n```\n\n这将生成 `key.pem`（私钥）和 `cert.pem`（证书）文件。\n\n### 2. 配置 Spring Boot 使用 HTTPS\n\n#### 将证书放入 Spring Boot 项目\n将生成的 `key.pem` 和 `cert.pem` 文件放入 `src/main/resources` 目录。\n\n#### 修改 `application.properties`\n在 `application.properties` 中添加以下配置：\n\n```properties\nserver.port=8443\nserver.ssl.key-store=classpath:keystore.p12\nserver.ssl.key-store-password=your_password\nserver.ssl.key-password=your_password\n```\n\n将 `key.pem` 和 `cert.pem` 转换为 PKCS12 格式：\n\n```bash\nopenssl pkcs12 -export -in cert.pem -inkey key.pem -out keystore.p12 -name tomcat -CAfile cert.pem -caname root\n```\n\n将生成的 `keystore.p12` 放入 `src/main/resources` 目录。\n\n### 3. 配置 Vue 使用 HTTPS\n\n#### 修改 Vue 开发服务器配置\n在 `vue.config.js` 中配置开发服务器使用 HTTPS：\n\n```javascript\nconst fs = require('fs');\nconst path = require('path');\n\nmodule.exports = {\n  devServer: {\n    port: 8080,\n    https: {\n      key: fs.readFileSync(path.resolve(__dirname, 'key.pem')),\n      cert: fs.readFileSync(path.resolve(__dirname, 'cert.pem')),\n    },\n    proxy: {\n      '/api': {\n        target: 'https://localhost:8443',\n        secure: false,\n        changeOrigin: true,\n      },\n    },\n  },\n};\n```\n\n将 `key.pem` 和 `cert.pem` 放入 Vue 项目根目录。\n\n### 4. 部署配置\n\n#### 前端部署\n将 Vue 项目打包并部署到支持 HTTPS 的服务器（如 Nginx 或 Apache）。\n\n#### 后端部署\n将 Spring Boot 项目打包为 JAR 或 WAR 文件，并部署到支持 HTTPS 的服务器。\n\n### 5. 测试\n启动 Spring Boot 和 Vue 项目，分别通过 `https://localhost:8443` 和 `https://localhost:8080` 访问，确保 HTTPS 正常工作。\n\n### 6. 其他注意事项\n- **证书有效期**：自签名证书仅用于测试，生产环境应使用受信任的 CA 证书。\n- **混合内容**：确保前端资源（如 JS、CSS）通过 HTTPS 加载，避免混合内容问题。\n- **CORS**：如果前后端分离部署，配置正确的 CORS 策略。\n\n通过这些步骤，你的 Vue + Spring Boot 项目将能够使用 HTTPS 进行安全通信。","slug":"hello-world","published":1,"updated":"2025-01-08T06:18:19.850Z","comments":1,"layout":"post","photos":[],"_id":"cm5nuodg10001wknhgtev2lfw","content":"<p>在 Vue + Spring Boot 项目中使用 HTTPS，需要分别在 Vue 前端和 Spring Boot 后端进行配置。以下是具体步骤：</p>\n<h3 id=\"1-生成-SSL-证书\"><a href=\"#1-生成-SSL-证书\" class=\"headerlink\" title=\"1. 生成 SSL 证书\"></a>1. 生成 SSL 证书</h3><p>首先，你需要一个 SSL 证书。可以使用自签名证书进行测试，或从受信任的证书颁发机构（CA）获取正式证书。</p>\n<h4 id=\"自签名证书生成\"><a href=\"#自签名证书生成\" class=\"headerlink\" title=\"自签名证书生成\"></a>自签名证书生成</h4><p>使用 OpenSSL 生成自签名证书：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes</span><br></pre></td></tr></table></figure>\n\n<p>这将生成 <code>key.pem</code>（私钥）和 <code>cert.pem</code>（证书）文件。</p>\n<h3 id=\"2-配置-Spring-Boot-使用-HTTPS\"><a href=\"#2-配置-Spring-Boot-使用-HTTPS\" class=\"headerlink\" title=\"2. 配置 Spring Boot 使用 HTTPS\"></a>2. 配置 Spring Boot 使用 HTTPS</h3><h4 id=\"将证书放入-Spring-Boot-项目\"><a href=\"#将证书放入-Spring-Boot-项目\" class=\"headerlink\" title=\"将证书放入 Spring Boot 项目\"></a>将证书放入 Spring Boot 项目</h4><p>将生成的 <code>key.pem</code> 和 <code>cert.pem</code> 文件放入 <code>src/main/resources</code> 目录。</p>\n<h4 id=\"修改-application-properties\"><a href=\"#修改-application-properties\" class=\"headerlink\" title=\"修改 application.properties\"></a>修改 <code>application.properties</code></h4><p>在 <code>application.properties</code> 中添加以下配置：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">8443</span></span><br><span class=\"line\"><span class=\"attr\">server.ssl.key-store</span>=<span class=\"string\">classpath:keystore.p12</span></span><br><span class=\"line\"><span class=\"attr\">server.ssl.key-store-password</span>=<span class=\"string\">your_password</span></span><br><span class=\"line\"><span class=\"attr\">server.ssl.key-password</span>=<span class=\"string\">your_password</span></span><br></pre></td></tr></table></figure>\n\n<p>将 <code>key.pem</code> 和 <code>cert.pem</code> 转换为 PKCS12 格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl pkcs12 -<span class=\"built_in\">export</span> -<span class=\"keyword\">in</span> cert.pem -inkey key.pem -out keystore.p12 -name tomcat -CAfile cert.pem -caname root</span><br></pre></td></tr></table></figure>\n\n<p>将生成的 <code>keystore.p12</code> 放入 <code>src/main/resources</code> 目录。</p>\n<h3 id=\"3-配置-Vue-使用-HTTPS\"><a href=\"#3-配置-Vue-使用-HTTPS\" class=\"headerlink\" title=\"3. 配置 Vue 使用 HTTPS\"></a>3. 配置 Vue 使用 HTTPS</h3><h4 id=\"修改-Vue-开发服务器配置\"><a href=\"#修改-Vue-开发服务器配置\" class=\"headerlink\" title=\"修改 Vue 开发服务器配置\"></a>修改 Vue 开发服务器配置</h4><p>在 <code>vue.config.js</code> 中配置开发服务器使用 HTTPS：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8080</span>,</span><br><span class=\"line\">    <span class=\"attr\">https</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">key</span>: fs.<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;key.pem&#x27;</span>)),</span><br><span class=\"line\">      <span class=\"attr\">cert</span>: fs.<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;cert.pem&#x27;</span>)),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;https://localhost:8443&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>将 <code>key.pem</code> 和 <code>cert.pem</code> 放入 Vue 项目根目录。</p>\n<h3 id=\"4-部署配置\"><a href=\"#4-部署配置\" class=\"headerlink\" title=\"4. 部署配置\"></a>4. 部署配置</h3><h4 id=\"前端部署\"><a href=\"#前端部署\" class=\"headerlink\" title=\"前端部署\"></a>前端部署</h4><p>将 Vue 项目打包并部署到支持 HTTPS 的服务器（如 Nginx 或 Apache）。</p>\n<h4 id=\"后端部署\"><a href=\"#后端部署\" class=\"headerlink\" title=\"后端部署\"></a>后端部署</h4><p>将 Spring Boot 项目打包为 JAR 或 WAR 文件，并部署到支持 HTTPS 的服务器。</p>\n<h3 id=\"5-测试\"><a href=\"#5-测试\" class=\"headerlink\" title=\"5. 测试\"></a>5. 测试</h3><p>启动 Spring Boot 和 Vue 项目，分别通过 <code>https://localhost:8443</code> 和 <code>https://localhost:8080</code> 访问，确保 HTTPS 正常工作。</p>\n<h3 id=\"6-其他注意事项\"><a href=\"#6-其他注意事项\" class=\"headerlink\" title=\"6. 其他注意事项\"></a>6. 其他注意事项</h3><ul>\n<li><strong>证书有效期</strong>：自签名证书仅用于测试，生产环境应使用受信任的 CA 证书。</li>\n<li><strong>混合内容</strong>：确保前端资源（如 JS、CSS）通过 HTTPS 加载，避免混合内容问题。</li>\n<li><strong>CORS</strong>：如果前后端分离部署，配置正确的 CORS 策略。</li>\n</ul>\n<p>通过这些步骤，你的 Vue + Spring Boot 项目将能够使用 HTTPS 进行安全通信。</p>\n","cover":false,"excerpt":"","more":"<p>在 Vue + Spring Boot 项目中使用 HTTPS，需要分别在 Vue 前端和 Spring Boot 后端进行配置。以下是具体步骤：</p>\n<h3 id=\"1-生成-SSL-证书\"><a href=\"#1-生成-SSL-证书\" class=\"headerlink\" title=\"1. 生成 SSL 证书\"></a>1. 生成 SSL 证书</h3><p>首先，你需要一个 SSL 证书。可以使用自签名证书进行测试，或从受信任的证书颁发机构（CA）获取正式证书。</p>\n<h4 id=\"自签名证书生成\"><a href=\"#自签名证书生成\" class=\"headerlink\" title=\"自签名证书生成\"></a>自签名证书生成</h4><p>使用 OpenSSL 生成自签名证书：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes</span><br></pre></td></tr></table></figure>\n\n<p>这将生成 <code>key.pem</code>（私钥）和 <code>cert.pem</code>（证书）文件。</p>\n<h3 id=\"2-配置-Spring-Boot-使用-HTTPS\"><a href=\"#2-配置-Spring-Boot-使用-HTTPS\" class=\"headerlink\" title=\"2. 配置 Spring Boot 使用 HTTPS\"></a>2. 配置 Spring Boot 使用 HTTPS</h3><h4 id=\"将证书放入-Spring-Boot-项目\"><a href=\"#将证书放入-Spring-Boot-项目\" class=\"headerlink\" title=\"将证书放入 Spring Boot 项目\"></a>将证书放入 Spring Boot 项目</h4><p>将生成的 <code>key.pem</code> 和 <code>cert.pem</code> 文件放入 <code>src/main/resources</code> 目录。</p>\n<h4 id=\"修改-application-properties\"><a href=\"#修改-application-properties\" class=\"headerlink\" title=\"修改 application.properties\"></a>修改 <code>application.properties</code></h4><p>在 <code>application.properties</code> 中添加以下配置：</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">8443</span></span><br><span class=\"line\"><span class=\"attr\">server.ssl.key-store</span>=<span class=\"string\">classpath:keystore.p12</span></span><br><span class=\"line\"><span class=\"attr\">server.ssl.key-store-password</span>=<span class=\"string\">your_password</span></span><br><span class=\"line\"><span class=\"attr\">server.ssl.key-password</span>=<span class=\"string\">your_password</span></span><br></pre></td></tr></table></figure>\n\n<p>将 <code>key.pem</code> 和 <code>cert.pem</code> 转换为 PKCS12 格式：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">openssl pkcs12 -<span class=\"built_in\">export</span> -<span class=\"keyword\">in</span> cert.pem -inkey key.pem -out keystore.p12 -name tomcat -CAfile cert.pem -caname root</span><br></pre></td></tr></table></figure>\n\n<p>将生成的 <code>keystore.p12</code> 放入 <code>src/main/resources</code> 目录。</p>\n<h3 id=\"3-配置-Vue-使用-HTTPS\"><a href=\"#3-配置-Vue-使用-HTTPS\" class=\"headerlink\" title=\"3. 配置 Vue 使用 HTTPS\"></a>3. 配置 Vue 使用 HTTPS</h3><h4 id=\"修改-Vue-开发服务器配置\"><a href=\"#修改-Vue-开发服务器配置\" class=\"headerlink\" title=\"修改 Vue 开发服务器配置\"></a>修改 Vue 开发服务器配置</h4><p>在 <code>vue.config.js</code> 中配置开发服务器使用 HTTPS：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;path&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123;</span><br><span class=\"line\">  <span class=\"attr\">devServer</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">port</span>: <span class=\"number\">8080</span>,</span><br><span class=\"line\">    <span class=\"attr\">https</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">key</span>: fs.<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;key.pem&#x27;</span>)),</span><br><span class=\"line\">      <span class=\"attr\">cert</span>: fs.<span class=\"title function_\">readFileSync</span>(path.<span class=\"title function_\">resolve</span>(__dirname, <span class=\"string\">&#x27;cert.pem&#x27;</span>)),</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"attr\">proxy</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&#x27;/api&#x27;</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">target</span>: <span class=\"string\">&#x27;https://localhost:8443&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">changeOrigin</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p>将 <code>key.pem</code> 和 <code>cert.pem</code> 放入 Vue 项目根目录。</p>\n<h3 id=\"4-部署配置\"><a href=\"#4-部署配置\" class=\"headerlink\" title=\"4. 部署配置\"></a>4. 部署配置</h3><h4 id=\"前端部署\"><a href=\"#前端部署\" class=\"headerlink\" title=\"前端部署\"></a>前端部署</h4><p>将 Vue 项目打包并部署到支持 HTTPS 的服务器（如 Nginx 或 Apache）。</p>\n<h4 id=\"后端部署\"><a href=\"#后端部署\" class=\"headerlink\" title=\"后端部署\"></a>后端部署</h4><p>将 Spring Boot 项目打包为 JAR 或 WAR 文件，并部署到支持 HTTPS 的服务器。</p>\n<h3 id=\"5-测试\"><a href=\"#5-测试\" class=\"headerlink\" title=\"5. 测试\"></a>5. 测试</h3><p>启动 Spring Boot 和 Vue 项目，分别通过 <code>https://localhost:8443</code> 和 <code>https://localhost:8080</code> 访问，确保 HTTPS 正常工作。</p>\n<h3 id=\"6-其他注意事项\"><a href=\"#6-其他注意事项\" class=\"headerlink\" title=\"6. 其他注意事项\"></a>6. 其他注意事项</h3><ul>\n<li><strong>证书有效期</strong>：自签名证书仅用于测试，生产环境应使用受信任的 CA 证书。</li>\n<li><strong>混合内容</strong>：确保前端资源（如 JS、CSS）通过 HTTPS 加载，避免混合内容问题。</li>\n<li><strong>CORS</strong>：如果前后端分离部署，配置正确的 CORS 策略。</li>\n</ul>\n<p>通过这些步骤，你的 Vue + Spring Boot 项目将能够使用 HTTPS 进行安全通信。</p>\n"},{"title":"怎么在github pages部署自己的hexo项目","date":"2025-01-08T08:31:54.026Z","_content":"\n在 GitHub Pages 上部署 Hexo 项目是一个常见的需求，Hexo 是一个基于 Node.js 的静态博客生成器，而 GitHub Pages 是一个免费的静态网站托管服务。以下是详细的步骤，帮助你完成 Hexo 项目的部署。\n\n---\n\n### 1. 准备工作\n确保你已经完成以下准备工作：\n- 安装 Node.js 和 npm。\n- 安装 Git。\n- 创建一个 GitHub 仓库（如果还没有）。\n\n---\n\n### 2. 安装 Hexo\n如果你还没有安装 Hexo，可以通过以下命令安装：\n\n```bash\nnpm install -g hexo-cli\n```\n\n---\n\n### 3. 初始化 Hexo 项目\n在本地初始化一个 Hexo 项目：\n\n```bash\nhexo init my-blog\ncd my-blog\nnpm install\n```\n\n- `my-blog` 是你的项目文件夹名称，可以根据需要修改。\n\n---\n\n### 4. 配置 Hexo\n在 Hexo 项目的根目录下，编辑 `_config.yml` 文件，设置以下内容：\n\n#### 配置部署信息\n找到 `deploy` 部分，修改为以下内容：\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/username/username.github.io.git\n  branch: main\n```\n\n- `repo`：你的 GitHub 仓库地址。如果仓库名是 `username.github.io`，GitHub Pages 会自动部署到根目录。\n- `branch`：部署分支，通常为 `main` 或 `gh-pages`。\n\n#### 配置 URL 和根目录\n找到 `url` 和 `root` 部分，根据你的仓库名称设置：\n\n- 如果仓库名是 `username.github.io`：\n  ```yaml\n  url: https://username.github.io\n  root: /\n  ```\n\n- 如果仓库名是其他名称（如 `my-blog`）：\n  ```yaml\n  url: https://username.github.io/my-blog\n  root: /my-blog/\n  ```\n\n---\n\n### 5. 安装 Hexo 部署插件\nHexo 需要一个插件来支持 Git 部署。安装 `hexo-deployer-git`：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n---\n\n### 6. 生成静态文件并部署\n在项目根目录下运行以下命令：\n\n```bash\nhexo clean\nhexo generate\nhexo deploy\n```\n\n- `hexo clean`：清理缓存和旧文件。\n- `hexo generate`：生成静态文件到 `public` 目录。\n- `hexo deploy`：将生成的静态文件部署到 GitHub 仓库。\n\n---\n\n### 7. 配置 GitHub Pages\n1. 打开 GitHub 仓库，进入 `Settings -> Pages`。\n2. 在 `Source` 部分，选择部署分支（如 `main` 或 `gh-pages`）。\n3. 确保 `Custom domain` 为空（除非你使用了自定义域名）。\n4. 点击 `Save` 保存设置。\n\n---\n\n### 8. 访问你的 GitHub Pages\n部署完成后，访问以下 URL 查看你的网站：\n- 如果仓库名是 `username.github.io`，访问 `https://username.github.io`。\n- 如果仓库名是其他名称（如 `my-blog`），访问 `https://username.github.io/my-blog`。\n\n---\n\n### 9. 自动部署（可选）\n如果你希望每次推送代码时自动部署，可以使用 GitHub Actions。\n\n#### 创建 GitHub Actions 工作流\n在项目根目录下创建 `.github/workflows/deploy.yml` 文件，内容如下：\n\n```yaml\nname: Deploy Hexo to GitHub Pages\n\non:\n  push:\n    branches: [\"main\"]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Set up Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: 18\n\n      - name: Install Hexo and dependencies\n        run: |\n          npm install -g hexo-cli\n          npm install\n\n      - name: Generate static files\n        run: |\n          hexo clean\n          hexo generate\n\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n```\n\n- 这个工作流会在每次推送到 `main` 分支时自动生成静态文件并部署到 `gh-pages` 分支。\n\n---\n\n### 10. 常见问题\n\n#### 页面没有样式\n- 检查 `_config.yml` 中的 `url` 和 `root` 配置是否正确。\n- 确保资源文件路径正确，可以通过浏览器开发者工具查看是否有资源加载失败。\n\n#### 部署失败\n- 检查 GitHub 仓库的 `Settings -> Pages`，确保部署分支正确。\n- 确保 `hexo-deployer-git` 插件已安装。\n\n#### 自定义域名\n- 如果你使用了自定义域名，在 `source` 目录下创建 `CNAME` 文件，内容为你的域名。例如：\n  ```\n  example.com\n  ```\n\n---\n\n### 总结\n通过以上步骤，你可以将 Hexo 项目成功部署到 GitHub Pages。如果需要自动部署，可以使用 GitHub Actions 实现持续集成。如果有任何问题，可以参考 Hexo 和 GitHub Pages 的官方文档，或查看 GitHub 仓库的构建日志。","source":"_posts/howToCreateHexoAtGithubPages.md","raw":"---\ntitle: 怎么在github pages部署自己的hexo项目\ndate: 2025年1月8日17:29:19\ntags:\n---\n\n在 GitHub Pages 上部署 Hexo 项目是一个常见的需求，Hexo 是一个基于 Node.js 的静态博客生成器，而 GitHub Pages 是一个免费的静态网站托管服务。以下是详细的步骤，帮助你完成 Hexo 项目的部署。\n\n---\n\n### 1. 准备工作\n确保你已经完成以下准备工作：\n- 安装 Node.js 和 npm。\n- 安装 Git。\n- 创建一个 GitHub 仓库（如果还没有）。\n\n---\n\n### 2. 安装 Hexo\n如果你还没有安装 Hexo，可以通过以下命令安装：\n\n```bash\nnpm install -g hexo-cli\n```\n\n---\n\n### 3. 初始化 Hexo 项目\n在本地初始化一个 Hexo 项目：\n\n```bash\nhexo init my-blog\ncd my-blog\nnpm install\n```\n\n- `my-blog` 是你的项目文件夹名称，可以根据需要修改。\n\n---\n\n### 4. 配置 Hexo\n在 Hexo 项目的根目录下，编辑 `_config.yml` 文件，设置以下内容：\n\n#### 配置部署信息\n找到 `deploy` 部分，修改为以下内容：\n\n```yaml\ndeploy:\n  type: git\n  repo: https://github.com/username/username.github.io.git\n  branch: main\n```\n\n- `repo`：你的 GitHub 仓库地址。如果仓库名是 `username.github.io`，GitHub Pages 会自动部署到根目录。\n- `branch`：部署分支，通常为 `main` 或 `gh-pages`。\n\n#### 配置 URL 和根目录\n找到 `url` 和 `root` 部分，根据你的仓库名称设置：\n\n- 如果仓库名是 `username.github.io`：\n  ```yaml\n  url: https://username.github.io\n  root: /\n  ```\n\n- 如果仓库名是其他名称（如 `my-blog`）：\n  ```yaml\n  url: https://username.github.io/my-blog\n  root: /my-blog/\n  ```\n\n---\n\n### 5. 安装 Hexo 部署插件\nHexo 需要一个插件来支持 Git 部署。安装 `hexo-deployer-git`：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n---\n\n### 6. 生成静态文件并部署\n在项目根目录下运行以下命令：\n\n```bash\nhexo clean\nhexo generate\nhexo deploy\n```\n\n- `hexo clean`：清理缓存和旧文件。\n- `hexo generate`：生成静态文件到 `public` 目录。\n- `hexo deploy`：将生成的静态文件部署到 GitHub 仓库。\n\n---\n\n### 7. 配置 GitHub Pages\n1. 打开 GitHub 仓库，进入 `Settings -> Pages`。\n2. 在 `Source` 部分，选择部署分支（如 `main` 或 `gh-pages`）。\n3. 确保 `Custom domain` 为空（除非你使用了自定义域名）。\n4. 点击 `Save` 保存设置。\n\n---\n\n### 8. 访问你的 GitHub Pages\n部署完成后，访问以下 URL 查看你的网站：\n- 如果仓库名是 `username.github.io`，访问 `https://username.github.io`。\n- 如果仓库名是其他名称（如 `my-blog`），访问 `https://username.github.io/my-blog`。\n\n---\n\n### 9. 自动部署（可选）\n如果你希望每次推送代码时自动部署，可以使用 GitHub Actions。\n\n#### 创建 GitHub Actions 工作流\n在项目根目录下创建 `.github/workflows/deploy.yml` 文件，内容如下：\n\n```yaml\nname: Deploy Hexo to GitHub Pages\n\non:\n  push:\n    branches: [\"main\"]\n\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n\n      - name: Set up Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version: 18\n\n      - name: Install Hexo and dependencies\n        run: |\n          npm install -g hexo-cli\n          npm install\n\n      - name: Generate static files\n        run: |\n          hexo clean\n          hexo generate\n\n      - name: Deploy to GitHub Pages\n        uses: peaceiris/actions-gh-pages@v3\n        with:\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          publish_dir: ./public\n```\n\n- 这个工作流会在每次推送到 `main` 分支时自动生成静态文件并部署到 `gh-pages` 分支。\n\n---\n\n### 10. 常见问题\n\n#### 页面没有样式\n- 检查 `_config.yml` 中的 `url` 和 `root` 配置是否正确。\n- 确保资源文件路径正确，可以通过浏览器开发者工具查看是否有资源加载失败。\n\n#### 部署失败\n- 检查 GitHub 仓库的 `Settings -> Pages`，确保部署分支正确。\n- 确保 `hexo-deployer-git` 插件已安装。\n\n#### 自定义域名\n- 如果你使用了自定义域名，在 `source` 目录下创建 `CNAME` 文件，内容为你的域名。例如：\n  ```\n  example.com\n  ```\n\n---\n\n### 总结\n通过以上步骤，你可以将 Hexo 项目成功部署到 GitHub Pages。如果需要自动部署，可以使用 GitHub Actions 实现持续集成。如果有任何问题，可以参考 Hexo 和 GitHub Pages 的官方文档，或查看 GitHub 仓库的构建日志。","slug":"howToCreateHexoAtGithubPages","published":1,"updated":"2025-01-08T09:29:21.500Z","comments":1,"layout":"post","photos":[],"_id":"cm5nuodg60003wknhbq3taxe6","content":"<p>在 GitHub Pages 上部署 Hexo 项目是一个常见的需求，Hexo 是一个基于 Node.js 的静态博客生成器，而 GitHub Pages 是一个免费的静态网站托管服务。以下是详细的步骤，帮助你完成 Hexo 项目的部署。</p>\n<hr>\n<h3 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1. 准备工作\"></a>1. 准备工作</h3><p>确保你已经完成以下准备工作：</p>\n<ul>\n<li>安装 Node.js 和 npm。</li>\n<li>安装 Git。</li>\n<li>创建一个 GitHub 仓库（如果还没有）。</li>\n</ul>\n<hr>\n<h3 id=\"2-安装-Hexo\"><a href=\"#2-安装-Hexo\" class=\"headerlink\" title=\"2. 安装 Hexo\"></a>2. 安装 Hexo</h3><p>如果你还没有安装 Hexo，可以通过以下命令安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"3-初始化-Hexo-项目\"><a href=\"#3-初始化-Hexo-项目\" class=\"headerlink\" title=\"3. 初始化 Hexo 项目\"></a>3. 初始化 Hexo 项目</h3><p>在本地初始化一个 Hexo 项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my-blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> my-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>my-blog</code> 是你的项目文件夹名称，可以根据需要修改。</li>\n</ul>\n<hr>\n<h3 id=\"4-配置-Hexo\"><a href=\"#4-配置-Hexo\" class=\"headerlink\" title=\"4. 配置 Hexo\"></a>4. 配置 Hexo</h3><p>在 Hexo 项目的根目录下，编辑 <code>_config.yml</code> 文件，设置以下内容：</p>\n<h4 id=\"配置部署信息\"><a href=\"#配置部署信息\" class=\"headerlink\" title=\"配置部署信息\"></a>配置部署信息</h4><p>找到 <code>deploy</code> 部分，修改为以下内容：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/username/username.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>repo</code>：你的 GitHub 仓库地址。如果仓库名是 <code>username.github.io</code>，GitHub Pages 会自动部署到根目录。</li>\n<li><code>branch</code>：部署分支，通常为 <code>main</code> 或 <code>gh-pages</code>。</li>\n</ul>\n<h4 id=\"配置-URL-和根目录\"><a href=\"#配置-URL-和根目录\" class=\"headerlink\" title=\"配置 URL 和根目录\"></a>配置 URL 和根目录</h4><p>找到 <code>url</code> 和 <code>root</code> 部分，根据你的仓库名称设置：</p>\n<ul>\n<li><p>如果仓库名是 <code>username.github.io</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://username.github.io</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果仓库名是其他名称（如 <code>my-blog</code>）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://username.github.io/my-blog</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/my-blog/</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h3 id=\"5-安装-Hexo-部署插件\"><a href=\"#5-安装-Hexo-部署插件\" class=\"headerlink\" title=\"5. 安装 Hexo 部署插件\"></a>5. 安装 Hexo 部署插件</h3><p>Hexo 需要一个插件来支持 Git 部署。安装 <code>hexo-deployer-git</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"6-生成静态文件并部署\"><a href=\"#6-生成静态文件并部署\" class=\"headerlink\" title=\"6. 生成静态文件并部署\"></a>6. 生成静态文件并部署</h3><p>在项目根目录下运行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>hexo clean</code>：清理缓存和旧文件。</li>\n<li><code>hexo generate</code>：生成静态文件到 <code>public</code> 目录。</li>\n<li><code>hexo deploy</code>：将生成的静态文件部署到 GitHub 仓库。</li>\n</ul>\n<hr>\n<h3 id=\"7-配置-GitHub-Pages\"><a href=\"#7-配置-GitHub-Pages\" class=\"headerlink\" title=\"7. 配置 GitHub Pages\"></a>7. 配置 GitHub Pages</h3><ol>\n<li>打开 GitHub 仓库，进入 <code>Settings -&gt; Pages</code>。</li>\n<li>在 <code>Source</code> 部分，选择部署分支（如 <code>main</code> 或 <code>gh-pages</code>）。</li>\n<li>确保 <code>Custom domain</code> 为空（除非你使用了自定义域名）。</li>\n<li>点击 <code>Save</code> 保存设置。</li>\n</ol>\n<hr>\n<h3 id=\"8-访问你的-GitHub-Pages\"><a href=\"#8-访问你的-GitHub-Pages\" class=\"headerlink\" title=\"8. 访问你的 GitHub Pages\"></a>8. 访问你的 GitHub Pages</h3><p>部署完成后，访问以下 URL 查看你的网站：</p>\n<ul>\n<li>如果仓库名是 <code>username.github.io</code>，访问 <code>https://username.github.io</code>。</li>\n<li>如果仓库名是其他名称（如 <code>my-blog</code>），访问 <code>https://username.github.io/my-blog</code>。</li>\n</ul>\n<hr>\n<h3 id=\"9-自动部署（可选）\"><a href=\"#9-自动部署（可选）\" class=\"headerlink\" title=\"9. 自动部署（可选）\"></a>9. 自动部署（可选）</h3><p>如果你希望每次推送代码时自动部署，可以使用 GitHub Actions。</p>\n<h4 id=\"创建-GitHub-Actions-工作流\"><a href=\"#创建-GitHub-Actions-工作流\" class=\"headerlink\" title=\"创建 GitHub Actions 工作流\"></a>创建 GitHub Actions 工作流</h4><p>在项目根目录下创建 <code>.github/workflows/deploy.yml</code> 文件，内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">Hexo</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> [<span class=\"string\">&quot;main&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Set</span> <span class=\"string\">up</span> <span class=\"string\">Node.js</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"number\">18</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">Hexo</span> <span class=\"string\">and</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          npm install -g hexo-cli</span></span><br><span class=\"line\"><span class=\"string\">          npm install</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Generate</span> <span class=\"string\">static</span> <span class=\"string\">files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          hexo clean</span></span><br><span class=\"line\"><span class=\"string\">          hexo generate</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">peaceiris/actions-gh-pages@v3</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">github_token:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">publish_dir:</span> <span class=\"string\">./public</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这个工作流会在每次推送到 <code>main</code> 分支时自动生成静态文件并部署到 <code>gh-pages</code> 分支。</li>\n</ul>\n<hr>\n<h3 id=\"10-常见问题\"><a href=\"#10-常见问题\" class=\"headerlink\" title=\"10. 常见问题\"></a>10. 常见问题</h3><h4 id=\"页面没有样式\"><a href=\"#页面没有样式\" class=\"headerlink\" title=\"页面没有样式\"></a>页面没有样式</h4><ul>\n<li>检查 <code>_config.yml</code> 中的 <code>url</code> 和 <code>root</code> 配置是否正确。</li>\n<li>确保资源文件路径正确，可以通过浏览器开发者工具查看是否有资源加载失败。</li>\n</ul>\n<h4 id=\"部署失败\"><a href=\"#部署失败\" class=\"headerlink\" title=\"部署失败\"></a>部署失败</h4><ul>\n<li>检查 GitHub 仓库的 <code>Settings -&gt; Pages</code>，确保部署分支正确。</li>\n<li>确保 <code>hexo-deployer-git</code> 插件已安装。</li>\n</ul>\n<h4 id=\"自定义域名\"><a href=\"#自定义域名\" class=\"headerlink\" title=\"自定义域名\"></a>自定义域名</h4><ul>\n<li>如果你使用了自定义域名，在 <code>source</code> 目录下创建 <code>CNAME</code> 文件，内容为你的域名。例如：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">example.com</span><br></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>通过以上步骤，你可以将 Hexo 项目成功部署到 GitHub Pages。如果需要自动部署，可以使用 GitHub Actions 实现持续集成。如果有任何问题，可以参考 Hexo 和 GitHub Pages 的官方文档，或查看 GitHub 仓库的构建日志。</p>\n","cover":false,"excerpt":"","more":"<p>在 GitHub Pages 上部署 Hexo 项目是一个常见的需求，Hexo 是一个基于 Node.js 的静态博客生成器，而 GitHub Pages 是一个免费的静态网站托管服务。以下是详细的步骤，帮助你完成 Hexo 项目的部署。</p>\n<hr>\n<h3 id=\"1-准备工作\"><a href=\"#1-准备工作\" class=\"headerlink\" title=\"1. 准备工作\"></a>1. 准备工作</h3><p>确保你已经完成以下准备工作：</p>\n<ul>\n<li>安装 Node.js 和 npm。</li>\n<li>安装 Git。</li>\n<li>创建一个 GitHub 仓库（如果还没有）。</li>\n</ul>\n<hr>\n<h3 id=\"2-安装-Hexo\"><a href=\"#2-安装-Hexo\" class=\"headerlink\" title=\"2. 安装 Hexo\"></a>2. 安装 Hexo</h3><p>如果你还没有安装 Hexo，可以通过以下命令安装：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"3-初始化-Hexo-项目\"><a href=\"#3-初始化-Hexo-项目\" class=\"headerlink\" title=\"3. 初始化 Hexo 项目\"></a>3. 初始化 Hexo 项目</h3><p>在本地初始化一个 Hexo 项目：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init my-blog</span><br><span class=\"line\"><span class=\"built_in\">cd</span> my-blog</span><br><span class=\"line\">npm install</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>my-blog</code> 是你的项目文件夹名称，可以根据需要修改。</li>\n</ul>\n<hr>\n<h3 id=\"4-配置-Hexo\"><a href=\"#4-配置-Hexo\" class=\"headerlink\" title=\"4. 配置 Hexo\"></a>4. 配置 Hexo</h3><p>在 Hexo 项目的根目录下，编辑 <code>_config.yml</code> 文件，设置以下内容：</p>\n<h4 id=\"配置部署信息\"><a href=\"#配置部署信息\" class=\"headerlink\" title=\"配置部署信息\"></a>配置部署信息</h4><p>找到 <code>deploy</code> 部分，修改为以下内容：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">https://github.com/username/username.github.io.git</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> <span class=\"string\">main</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>repo</code>：你的 GitHub 仓库地址。如果仓库名是 <code>username.github.io</code>，GitHub Pages 会自动部署到根目录。</li>\n<li><code>branch</code>：部署分支，通常为 <code>main</code> 或 <code>gh-pages</code>。</li>\n</ul>\n<h4 id=\"配置-URL-和根目录\"><a href=\"#配置-URL-和根目录\" class=\"headerlink\" title=\"配置 URL 和根目录\"></a>配置 URL 和根目录</h4><p>找到 <code>url</code> 和 <code>root</code> 部分，根据你的仓库名称设置：</p>\n<ul>\n<li><p>如果仓库名是 <code>username.github.io</code>：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://username.github.io</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如果仓库名是其他名称（如 <code>my-blog</code>）：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">url:</span> <span class=\"string\">https://username.github.io/my-blog</span></span><br><span class=\"line\"><span class=\"attr\">root:</span> <span class=\"string\">/my-blog/</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h3 id=\"5-安装-Hexo-部署插件\"><a href=\"#5-安装-Hexo-部署插件\" class=\"headerlink\" title=\"5. 安装 Hexo 部署插件\"></a>5. 安装 Hexo 部署插件</h3><p>Hexo 需要一个插件来支持 Git 部署。安装 <code>hexo-deployer-git</code>：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h3 id=\"6-生成静态文件并部署\"><a href=\"#6-生成静态文件并部署\" class=\"headerlink\" title=\"6. 生成静态文件并部署\"></a>6. 生成静态文件并部署</h3><p>在项目根目录下运行以下命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li><code>hexo clean</code>：清理缓存和旧文件。</li>\n<li><code>hexo generate</code>：生成静态文件到 <code>public</code> 目录。</li>\n<li><code>hexo deploy</code>：将生成的静态文件部署到 GitHub 仓库。</li>\n</ul>\n<hr>\n<h3 id=\"7-配置-GitHub-Pages\"><a href=\"#7-配置-GitHub-Pages\" class=\"headerlink\" title=\"7. 配置 GitHub Pages\"></a>7. 配置 GitHub Pages</h3><ol>\n<li>打开 GitHub 仓库，进入 <code>Settings -&gt; Pages</code>。</li>\n<li>在 <code>Source</code> 部分，选择部署分支（如 <code>main</code> 或 <code>gh-pages</code>）。</li>\n<li>确保 <code>Custom domain</code> 为空（除非你使用了自定义域名）。</li>\n<li>点击 <code>Save</code> 保存设置。</li>\n</ol>\n<hr>\n<h3 id=\"8-访问你的-GitHub-Pages\"><a href=\"#8-访问你的-GitHub-Pages\" class=\"headerlink\" title=\"8. 访问你的 GitHub Pages\"></a>8. 访问你的 GitHub Pages</h3><p>部署完成后，访问以下 URL 查看你的网站：</p>\n<ul>\n<li>如果仓库名是 <code>username.github.io</code>，访问 <code>https://username.github.io</code>。</li>\n<li>如果仓库名是其他名称（如 <code>my-blog</code>），访问 <code>https://username.github.io/my-blog</code>。</li>\n</ul>\n<hr>\n<h3 id=\"9-自动部署（可选）\"><a href=\"#9-自动部署（可选）\" class=\"headerlink\" title=\"9. 自动部署（可选）\"></a>9. 自动部署（可选）</h3><p>如果你希望每次推送代码时自动部署，可以使用 GitHub Actions。</p>\n<h4 id=\"创建-GitHub-Actions-工作流\"><a href=\"#创建-GitHub-Actions-工作流\" class=\"headerlink\" title=\"创建 GitHub Actions 工作流\"></a>创建 GitHub Actions 工作流</h4><p>在项目根目录下创建 <code>.github/workflows/deploy.yml</code> 文件，内容如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">Hexo</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span> [<span class=\"string\">&quot;main&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Checkout</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Set</span> <span class=\"string\">up</span> <span class=\"string\">Node.js</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"number\">18</span></span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">Hexo</span> <span class=\"string\">and</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          npm install -g hexo-cli</span></span><br><span class=\"line\"><span class=\"string\">          npm install</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Generate</span> <span class=\"string\">static</span> <span class=\"string\">files</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">          hexo clean</span></span><br><span class=\"line\"><span class=\"string\">          hexo generate</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">peaceiris/actions-gh-pages@v3</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">github_token:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"attr\">publish_dir:</span> <span class=\"string\">./public</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>这个工作流会在每次推送到 <code>main</code> 分支时自动生成静态文件并部署到 <code>gh-pages</code> 分支。</li>\n</ul>\n<hr>\n<h3 id=\"10-常见问题\"><a href=\"#10-常见问题\" class=\"headerlink\" title=\"10. 常见问题\"></a>10. 常见问题</h3><h4 id=\"页面没有样式\"><a href=\"#页面没有样式\" class=\"headerlink\" title=\"页面没有样式\"></a>页面没有样式</h4><ul>\n<li>检查 <code>_config.yml</code> 中的 <code>url</code> 和 <code>root</code> 配置是否正确。</li>\n<li>确保资源文件路径正确，可以通过浏览器开发者工具查看是否有资源加载失败。</li>\n</ul>\n<h4 id=\"部署失败\"><a href=\"#部署失败\" class=\"headerlink\" title=\"部署失败\"></a>部署失败</h4><ul>\n<li>检查 GitHub 仓库的 <code>Settings -&gt; Pages</code>，确保部署分支正确。</li>\n<li>确保 <code>hexo-deployer-git</code> 插件已安装。</li>\n</ul>\n<h4 id=\"自定义域名\"><a href=\"#自定义域名\" class=\"headerlink\" title=\"自定义域名\"></a>自定义域名</h4><ul>\n<li>如果你使用了自定义域名，在 <code>source</code> 目录下创建 <code>CNAME</code> 文件，内容为你的域名。例如：<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">example.com</span><br></pre></td></tr></table></figure></li>\n</ul>\n<hr>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>通过以上步骤，你可以将 Hexo 项目成功部署到 GitHub Pages。如果需要自动部署，可以使用 GitHub Actions 实现持续集成。如果有任何问题，可以参考 Hexo 和 GitHub Pages 的官方文档，或查看 GitHub 仓库的构建日志。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm5nuodg10001wknhgtev2lfw","category_id":"cm5nuodg80004wknhfr1457o2","_id":"cm5nuodgb0009wknh2l6m8jbb"}],"PostTag":[{"post_id":"cm5nuodg10001wknhgtev2lfw","tag_id":"cm5nuodg90005wknh0cq2cm00","_id":"cm5nuodgc000awknh1bal5by4"},{"post_id":"cm5nuodg10001wknhgtev2lfw","tag_id":"cm5nuodgb0008wknhgdclfvsq","_id":"cm5nuodgc000bwknh8dz23xwk"}],"Tag":[{"name":"deepseek","_id":"cm5nuodg90005wknh0cq2cm00"},{"name":"教程","_id":"cm5nuodgb0008wknhgdclfvsq"}]}}